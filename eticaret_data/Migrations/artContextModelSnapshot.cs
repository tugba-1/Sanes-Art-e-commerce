// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eticaret_data.Concrete.SQL;

#nullable disable

namespace eticaretdata.Migrations
{
    [DbContext(typeof(artContext))]
    partial class artContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eticaret_entity.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = "33863913-e083-4aa6-a32c-791b7ef6d78b"
                        },
                        new
                        {
                            Id = 2,
                            UserId = "d72106cb-2701-4a83-9f47-ba6c5ac5ad7e"
                        },
                        new
                        {
                            Id = 3,
                            UserId = "216b2e5b-8315-4d3e-bb01-9ebad2247fe6"
                        },
                        new
                        {
                            Id = 4,
                            UserId = "d72106cb-2701-4a83-9f47-ba6c5ac5ad7e"
                        },
                        new
                        {
                            Id = 5,
                            UserId = "b83bd353-9b07-4c8d-a411-da12b9056dec"
                        },
                        new
                        {
                            Id = 6,
                            UserId = "d72106cb-2701-4a83-9f47-ba6c5ac5ad7e"
                        },
                        new
                        {
                            Id = 7,
                            UserId = "5e909802-1002-4a33-9814-1d631f868477"
                        },
                        new
                        {
                            Id = 8,
                            UserId = "d72106cb-2701-4a83-9f47-ba6c5ac5ad7e"
                        },
                        new
                        {
                            Id = 9,
                            UserId = "03051276-2084-4f26-b792-ed2f57e92299"
                        });
                });

            modelBuilder.Entity("eticaret_entity.Models.CardItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("ProductId");

                    b.ToTable("CardItems");
                });

            modelBuilder.Entity("eticaret_entity.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Yağlı Boyalar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sulu Boyalar"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Minyatür"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Özgür Yapraklar"
                        });
                });

            modelBuilder.Entity("eticaret_entity.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("eticaret_entity.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConversationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiparisNo")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("eticaret_entity.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("eticaret_entity.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CommentId = 7,
                            Description = "50 x 110 cm",
                            ImgUrl = "aa45abbb-7277-4c87-a41a-b20c1eec45cb.JPG",
                            IsApproved = false,
                            Name = "Kız Kulesi",
                            OrderId = 1,
                            Price = 5m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            CommentId = 7,
                            Description = "45 x 60 cm",
                            ImgUrl = "abdff2f4-8939-4ec7-b922-647cfbb36bf3.JPG",
                            IsApproved = false,
                            Name = "Yeşil Vadi",
                            OrderId = 1,
                            Price = 11m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CommentId = 7,
                            Description = "50 x 70 cm",
                            ImgUrl = "7b6db39c-9f94-4551-b275-449f7ee93037.jpg",
                            IsApproved = false,
                            Name = "Masal Köy",
                            OrderId = 1,
                            Price = 0m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            CommentId = 1,
                            Description = "45 x 60 cm",
                            ImgUrl = "cb556e34-2d3c-4c7b-96d4-86c54f49941c.jpg",
                            IsApproved = false,
                            Name = "Yansıma",
                            OrderId = 1,
                            Price = 12m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            CommentId = 7,
                            Description = "20 x 27 cm",
                            ImgUrl = "5869b556-61f4-4996-96eb-4475abd7732a.jpg",
                            IsApproved = false,
                            Name = "",
                            OrderId = 3,
                            Price = 15m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CommentId = 0,
                            Description = "70 x 90 cm",
                            ImgUrl = "ce430118-3193-4630-a275-13e2347627c4.jpg",
                            IsApproved = false,
                            Name = "Cimil Şelalesi",
                            OrderId = 1,
                            Price = 1m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            CommentId = 0,
                            Description = "40 x 50 cm",
                            ImgUrl = "d4b6317f-43e8-4a6a-bdec-234c2364aab9.JPG",
                            IsApproved = false,
                            Name = "Taş Ev",
                            OrderId = 1,
                            Price = 1m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CommentId = 0,
                            Description = "25 x 35 cm",
                            ImgUrl = "358b912f-4d57-4224-a98e-721755be87f0.png",
                            IsApproved = false,
                            Name = "Mutluluk",
                            OrderId = 1,
                            Price = 1m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CommentId = 0,
                            Description = "25 x 35 cm ",
                            ImgUrl = "78a3e257-b065-4079-879a-75a5ae602994.png",
                            IsApproved = false,
                            Name = "Hülasa",
                            OrderId = 1,
                            Price = 1m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            CommentId = 0,
                            Description = "14 x 25 cm",
                            ImgUrl = "28de71f9-f5d3-47ec-8c27-245c87912f28.jpg",
                            IsApproved = false,
                            Name = "Huzur",
                            OrderId = 1,
                            Price = 1m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "84 x 84 cm",
                            ImgUrl = "5eb89005-113f-4326-89a1-1cca40931ef0.jpg",
                            IsApproved = false,
                            Name = "Yaşam",
                            OrderId = 0,
                            Price = 1m
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "13 x 28 cm",
                            ImgUrl = "203833d3-57d9-496f-a829-abcfdcb78fec.jpg",
                            IsApproved = false,
                            Name = "Denizciler",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "22 x 22 cm",
                            ImgUrl = "e1b5682e-6086-4d9f-ac36-d4e4d6f7a033.jpg",
                            IsApproved = false,
                            Name = "Semazen",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "11 x 17 cm",
                            ImgUrl = "b59001a7-aab8-472d-b2e3-d9b05db19f2b.JPG",
                            IsApproved = false,
                            Name = "Zeynep Dalkılıç",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = " 17 x 23 cm",
                            ImgUrl = "60c52500-a841-4f39-be06-77732fbb7969.jpg",
                            IsApproved = false,
                            Name = "Zeynep Dalkılıç",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "30 x 40 cm",
                            ImgUrl = "2abc375c-5c63-4ca4-930a-68a628087f0c.png",
                            IsApproved = false,
                            Name = "Yayla Dönüşü ",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "19 x 27 cm",
                            ImgUrl = "42edd97d-253b-47be-b86b-3edb0346ad73.JPG",
                            IsApproved = false,
                            Name = "",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "18 x 28 cm",
                            ImgUrl = "37320ca7-8d21-4023-bead-aa5aee654587.JPG",
                            IsApproved = false,
                            Name = "",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "16 x 18 cm",
                            ImgUrl = "0aae6fbc-7dd0-4bb7-a762-fb1188301060.JPG",
                            IsApproved = false,
                            Name = "",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "20 x 28 cm",
                            ImgUrl = "566ac9b7-193e-4382-a9f6-fa9d16867f21.JPG",
                            IsApproved = false,
                            Name = "",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "20 x 28 cm",
                            ImgUrl = "4dd23c1c-0bf4-4a55-a8f9-6f38d23b108a.JPG",
                            IsApproved = false,
                            Name = "",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "20 x 28 cm",
                            ImgUrl = "677bb0cf-9c2e-4f0a-bb18-f8ae2bec45d6.jpg",
                            IsApproved = false,
                            Name = "",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "20 x 28 cm",
                            ImgUrl = "702367da-fe4c-428a-ba34-f9ec15da10ff.JPG",
                            IsApproved = false,
                            Name = "",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "9 x 17 cm",
                            ImgUrl = "dd951ccd-ee9d-43e4-a56c-c8f9915a9ce1.jpg",
                            IsApproved = false,
                            Name = "Atatürk",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "17 x 9 cm",
                            ImgUrl = "32deb1e6-aeb0-4f58-8e8d-e09bb2d44113.png",
                            IsApproved = false,
                            Name = "Semazen",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = " 14 x 14 cm ",
                            ImgUrl = "f939f232-fdce-477d-b1c4-29f5b647fbe8.jpg",
                            IsApproved = false,
                            Name = "Mimber",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = " 12 x 18 cm",
                            ImgUrl = "0c8d5241-e343-4b5a-8880-02147ec3597a.jpg",
                            IsApproved = false,
                            Name = "Teslimiyet",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "8 x 12.5 cm",
                            ImgUrl = "a360282b-d810-444a-8e55-680a523249d9.jpg",
                            IsApproved = false,
                            Name = "Mevlana",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "40 x 50 cm",
                            ImgUrl = "7b24f31d-477c-44b6-92ee-2c1be604925b.jpg",
                            IsApproved = false,
                            Name = "Hatice Hala",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "17 x 24 cm",
                            ImgUrl = " 6e40a0c6-8940-4938-a07b-b2c3eb1d105b.JPG",
                            IsApproved = false,
                            Name = "Sahan",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = " 35 x 50 cm",
                            ImgUrl = "7334d590-c32f-4977-b846-bce5ecc6ecc5.JPG",
                            IsApproved = false,
                            Name = "Dağ Çiçeği",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "15 x 25 cm",
                            ImgUrl = "dbc75cc7-6565-455b-aa4a-5bb02722b8e6.png",
                            IsApproved = false,
                            Name = "Nilüfer",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "30 x 50 cm",
                            ImgUrl = "b01aa988-cd47-4b6b-b3b6-f7fc71434713.png",
                            IsApproved = false,
                            Name = "İnziva",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "25 x 35 cm",
                            ImgUrl = "c309a7a9-2e36-4fe3-929a-5f066a1c6771.jpg",
                            IsApproved = false,
                            Name = "Köy Yolu",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "40 x 50 cm",
                            ImgUrl = "IMG_6751.jpg",
                            IsApproved = false,
                            Name = "Safranbolu",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "9 x 15 cm",
                            ImgUrl = "de049298-7c30-4741-ab21-111143a4af17.png",
                            IsApproved = false,
                            Name = "Ayasofya",
                            OrderId = 0,
                            Price = 0m
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 0,
                            CommentId = 0,
                            Description = "9 x 16 cm",
                            ImgUrl = "e28d78f2-5b61-4823-999a-fd4052a41f83.png",
                            IsApproved = false,
                            Name = "Kelebek",
                            OrderId = 0,
                            Price = 0m
                        });
                });

            modelBuilder.Entity("eticaret_entity.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 34,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 35,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 37,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 38,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 39,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 40,
                            CategoryId = 6
                        });
                });

            modelBuilder.Entity("eticaret_entity.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("eticaret_entity.Models.CardItems", b =>
                {
                    b.HasOne("eticaret_entity.Models.Card", "Card")
                        .WithMany("CardItems")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eticaret_entity.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret_entity.Models.OrderItem", b =>
                {
                    b.HasOne("eticaret_entity.Models.Order", "Orders")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eticaret_entity.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret_entity.Models.ProductCategory", b =>
                {
                    b.HasOne("eticaret_entity.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eticaret_entity.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eticaret_entity.Models.Card", b =>
                {
                    b.Navigation("CardItems");
                });

            modelBuilder.Entity("eticaret_entity.Models.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("eticaret_entity.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("eticaret_entity.Models.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
